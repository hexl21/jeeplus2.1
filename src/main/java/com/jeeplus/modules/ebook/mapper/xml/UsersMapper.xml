<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.ebook.mapper.UsersMapper">

    <sql id="usersColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.userid AS "userid",
		a.username AS "username",
		a.password AS "password",
		a.money AS "money",
		a.portraitpic AS "portraitpic",
		a.state AS "state",
		a.remarks AS "remarks"
	</sql>

    <sql id="usersJoins">

    </sql>


    <select id="get" resultType="Users">
        SELECT
        <include refid="usersColumns"/>
        FROM users a
        <include refid="usersJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Users">
        SELECT
        <include refid="usersColumns"/>
        FROM users a
        <include refid="usersJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="Users">
        SELECT
        <include refid="usersColumns"/>
        FROM users a
        <include refid="usersJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO users(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			userid,
			username,
			password,
			money,
			portraitpic,
			state,
			remarks
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{userid},
			#{username},
			#{password},
			#{money},
			#{portraitpic},
			#{state},
			#{remarks}
		)
	</insert>

    <update id="update">
		UPDATE users SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			userid = #{userid},
			username = #{username},
			password = #{password},
			money = #{money},
			portraitpic = #{portraitpic},
			state = #{state},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>


    <!--物理删除-->
    <update id="delete">
		DELETE FROM users
		WHERE id = #{id}
	</update>

    <!--逻辑删除-->
    <update id="deleteByLogic">
		UPDATE users SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="findUniqueByProperty" resultType="Users" statementType="STATEMENT">
		select * FROM users  where ${propertyName} = '${value}'
	</select>

</mapper>